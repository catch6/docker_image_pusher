name: Schedule

on:
  workflow_dispatch:
  # push:
  #   branches: [main]
  schedule:
    # UTC时间星期日18点（北京时间是 UTC+8，即北京时间每周一早上 2 点）
    - cron: '0 18 * * 0'

env:
  ALIYUN_REGISTRY: '${{ secrets.ALIYUN_REGISTRY }}'
  ALIYUN_NAME_SPACE: '${{ secrets.ALIYUN_NAME_SPACE }}'
  ALIYUN_REGISTRY_USER: '${{ secrets.ALIYUN_REGISTRY_USER }}'
  ALIYUN_REGISTRY_PASSWORD: '${{ secrets.ALIYUN_REGISTRY_PASSWORD }}'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - id: set-matrix
        run: |
          IMAGES=$(grep -v '^#' schedule.txt | grep -v '^[[:space:]]*$' | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=${IMAGES}" >> $GITHUB_OUTPUT

  process-images:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.prepare.outputs.matrix) }}
      # 允许部分任务失败
      fail-fast: false
      # 最大并行数，可以根据需要调整
      max-parallel: 5

    steps:
      - name: Free up disk space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          build-mount-path: '/var/lib/docker/'

      - name: Restart docker
        run: sudo service docker restart

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Process Single Image
        run: |
          docker login -u $ALIYUN_REGISTRY_USER -p $ALIYUN_REGISTRY_PASSWORD $ALIYUN_REGISTRY

          line="${{ matrix.image }}"
          echo "Processing: $line"

          docker pull $line

          image=$(echo "$line" | awk '{print $NF}')
          echo "image: $image"

          if [[ $line == *"--platform="* ]]; then
              platform=$(echo "$line" | grep -oP '(?<=--platform=)[^ ]+')
              echo "platform: $platform"
              new_image=${image}-${platform}
          else
              new_image=$image
          fi

          # \改为-
          new_image=$(echo "$new_image" | sed 's/\//-/g')

          # 移除@sha256等后缀
          new_image=$(echo "$new_image" | cut -d '@' -f 1)

          echo "new_image: $new_image"

          new_image="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$new_image"

          echo "docker tag $image $new_image"
          docker tag $image $new_image

          echo "docker push $new_image"
          docker push $new_image

          docker rmi $image
          docker rmi $new_image
